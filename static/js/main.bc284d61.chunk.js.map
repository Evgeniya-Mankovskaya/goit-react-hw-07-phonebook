{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/contacts-actions.js","redux/contacts-operations.js","redux/contacts-reducer.js","redux/store.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Section/Section.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","changeFilter","createAction","axios","defaults","baseURL","fetchContacts","createAsyncThunk","a","get","data","addContact","name","number","contact","post","deleteContact","contactId","delete","id","items","createReducer","fulfilled","_","action","payload","state","filter","isLoading","pending","rejected","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","contactsReducer","devTools","process","ContactItem","onClick","phone","className","s","item","button","type","connect","filterList","allContacts","normalizedFilter","toLowerCase","includes","getFilterList","dispatch","onDeleteContact","isLoadind","useDispatch","useEffect","contactsList","map","Container","children","container","ContactForm","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","some","toast","reset","onSubmit","this","form","label","onChange","input","pattern","title","required","Component","Section","contactsActions","target","App","position","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc284d61.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__1KFBv\",\"item\":\"ContactList_item__3-h5I\",\"contact\":\"ContactList_contact__2WO30\",\"button\":\"ContactList_button__1lvnX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1WlwN\",\"input\":\"Filter_input__4w7i3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__jCKh2\"};","/* eslint-disable import/no-anonymous-default-export */\n\n// import { nanoid } from \"nanoid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\n// const addContact = createAction(\"contacts/add\", ({ name, number }) => {\n//   return {\n//     payload: {\n//       id: nanoid(),\n//       name: name,\n//       number: number,\n//     },\n//   };\n// });\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSeccess = createAction(\"contacts/addContactSeccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n\n// export default { addContactRequest, addContactSeccess, addContactError };\n","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = \"https://61e943a37bc0550017bc618d.mockapi.io/api/v1\";\n\nexport const fetchContacts = createAsyncThunk(\n  \"contacts/fetchContacts\",\n  async () => {\n    const { data } = await axios.get(\"/contacts\");\n    return data;\n  }\n);\n\nexport const addContact = createAsyncThunk(\n  \"contacts/addContact\",\n  async ({ name, number }) => {\n    const contact = { name, number };\n    const { data } = await axios.post(\"/contacts\", contact);\n    return data;\n  }\n);\n\nexport const deleteContact = createAsyncThunk(\n  \"contact/deleteContact\",\n  async (contactId) => {\n    const {\n      data: { id },\n    } = await axios.delete(`contacts/${contactId}`);\n    return id;\n  }\n);\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { changeFilter } from \"./contacts-actions\";\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from \"./contacts-operations\";\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\n  [addContact.fulfilled]: (state, action) => [...state, action.payload],\n  [deleteContact.fulfilled]: (state, action) =>\n    state.filter((contact) => contact.id !== action.payload),\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: (_, action) => action.payload,\n  [fetchContacts.fulfilled]: () => null,\n  [addContact.rejected]: (_, action) => action.payload,\n  [addContact.fulfilled]: () => null,\n  [deleteContact.rejected]: (_, action) => action.payload,\n  [deleteContact.fulfilled]: () => null,\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({ items, filter, isLoading, error });\n","/* eslint-disable import/no-anonymous-default-export */\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts-reducer\";\nimport {\n  // persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nimport logger from \"redux-logger\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\n// const persistor = persistStore(store);\n\n// export default { store, persistor };\n\nexport default store;\n","import s from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ContactItem = ({ name, number, onClick, phone }) => (\n  <li className={s.item}>\n    <p className={s.contact}>\n      {name}: {number || phone}\n    </p>\n    <button className={s.button} type=\"button\" onClick={onClick}>\n      Delete\n    </button>\n  </li>\n);\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\nexport default ContactItem;\n","import { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactItem from \"./ContactItem\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { fetchContacts, deleteContact } from \"../../redux/contacts-operations\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onDeleteContact, isLoadind }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n  return (\n    <>\n      {isLoadind ? (\n        <h1>Loading...</h1>\n      ) : (\n        <ul className={s.contactsList}>\n          {contacts.map(({ id, name, number, phone }) => (\n            <ContactItem\n              key={id}\n              name={name}\n              number={number || phone}\n              onClick={() => onDeleteContact(id)}\n            />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nconst getFilterList = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { filter, items } = state.contacts;\n  const filterList = getFilterList(items, filter);\n  return { contacts: filterList };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContact: (id) => dispatch(deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import s from \"./Container.module.css\";\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\nimport { addContact } from \"../../redux/contacts-operations\";\nimport s from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name } = this.state;\n    const contacts = this.props.contacts;\n    if (\n      contacts.some(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      toast(`\"Contact with name ${name} is already exist!\"`);\n      this.reset();\n    } else {\n      this.props.onSubmit(this.state);\n      this.reset();\n    }\n  };\n\n  reset = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            className={s.input}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            className={s.input}\n            onChange={this.handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSubmit: (data) => dispatch(addContact(data)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","function Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\nexport default Section;\n","import { connect } from \"react-redux\";\nimport * as contactsActions from \"../../redux/contacts-actions\";\nimport s from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={s.label}>\n      Find contact by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(contactsActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Container from \"./components/Container/Container\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Section from \"./components/Section/Section\";\nimport Filter from \"./components/Filter/Filter\";\n\nconst App = () => {\n  return (\n    <>\n      <Container>\n        <Section title=\"Phonebook\">\n          <ContactForm />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter />\n          <ContactList />\n        </Section>\n      </Container>\n      <ToastContainer position=\"top-center\" />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n// import { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__1sg6r\",\"input\":\"ContactForm_input__2f1bj\",\"button\":\"ContactForm_button__laK3L\"};"],"sourceRoot":""}